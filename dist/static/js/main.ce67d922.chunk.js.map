{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notification","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorfirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce67d922.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nconst SignedInLinks = (props) =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n    <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n        {props.profile.initials}</NavLink></li>     \r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) =>{\r\n    return(dispatch,getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS',})\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        })\r\n    }\r\n}\r\nexport const signOut = ()=>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\nexport const signUp =(newUser)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\nconst Nabvar = (props) =>{\r\n    const {auth,profile} = props\r\n    const links = auth.uid ?<SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Mario Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Nabvar)","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications =(props)=>{\r\n    const {notification} = props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications </span>\r\n                    <ul className=\"notifications\">\r\n                            {notification && notification.map(item=>{\r\n                                return (\r\n                                <li key={item.id}>\r\n                            <span className=\"pink-text\">{item.user}</span>\r\n                            <span>{item.content}</span>\r\n                            <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                                </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({project}) =>{\r\n    return(\r\n        <div className='card z-depth-0 project-summary'>\r\n                <div className='card-content grey-text text-darken-3'>\r\n                     <span className='card-title'>{project.title}</span>\r\n                     <p>Posted by {project.authorfirstName} {project.authorLastName}</p>\r\n                    <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects})=>{\r\n    return(\r\n        <div className='project-list section'>\r\n           { projects && projects.map(projects=>{\r\n                return(\r\n                    <Link to={'/project/'+projects.id} key={projects.id}>\r\n                    <ProjectSummary project={projects}/>\r\n                    </Link>\r\n                )\r\n           })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase' \r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Dashboard extends Component{\r\n    render(){\r\n        //console.log(this.props)\r\n        const {projects,auth,notification} = this.props\r\n        if(!auth.uid) return <Redirect  to='/signin'/>\r\n        return(\r\n            <div className='dashboard container'>\r\n                <div className='row'>\r\n                    <div className='col s12 m6'>\r\n                        <ProjectList projects={projects}/>\r\n                        \r\n                    </div>\r\n                    <div className='col s12 m5 offset-m1'>\r\n                        <Notifications notification={notification}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    //console.log(state)\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notification:state.firestore.ordered.notification\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects',orderBy:['createdAt','desc']},\r\n        {collection:'notification',limit:3, orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst ProjectDetails= (props)=> {\r\n    const id = props.match.params.id\r\n    console.log(props)\r\n    const {project,auth} = props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project){\r\n        return(\r\n        <div className='container section project-details'>\r\n            <div className='card z-depth-0'>\r\n                <div className='card-content'>\r\n                     <span className='card-title'>{project.title}</span>\r\n                     <p>{project.content}</p>\r\n                </div>\r\n                <div className='card-action gret lighten-4 grey-text'>\r\n                <div>Posted by {project.authorfirstName} {project.authorLastName}</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container center\">\r\n            <p>Loading Project...</p>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state, ownProps)=>{\r\n    //console.log(state)\r\n    //console.log(ownProps)\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project:project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nexport class SignIn extends Component {\r\n   state ={\r\n    email:'',\r\n    password:''\r\n   }\r\n   handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n   }\r\n   handleSubmit =(e)=>{\r\n       e.preventDefault()\r\n       this.props.signIn(this.state)\r\n   }\r\n    render() {\r\n        const {authError,auth} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='email' id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n                        <div className=\"red-text center\">\r\n        {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        signIn:(credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\nexport class SignUp extends Component {\r\n   state ={\r\n    email:'',\r\n    password:'',\r\n    firstName:'',\r\n    lastName:''\r\n   }\r\n   handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n   }\r\n   handleSubmit =(e)=>{\r\n       e.preventDefault()\r\n       this.props.signUp(this.state)\r\n   }\r\n    render() {\r\n        const {auth,authError} = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input type='email' id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='firstName'>Fisrt Name</label>\r\n                        <input type='text' id='firstName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='lastName'>Last Name</label>\r\n                        <input type='text' id='lastName' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        signUp: (newUser)=> dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\nexport class CreateProject extends Component {\r\n   state ={\r\n    title:'',\r\n    content:''\r\n   }\r\n   handleChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n   }\r\n   handleSubmit =(e)=>{\r\n       e.preventDefault()\r\n      // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className='white'>\r\n                    <h5 className='grey-text text-darken-3'>Create New Project</h5>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='title'>Title</label>\r\n                        <input type='text' id='title' onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <label htmlFor='content'>Content</label>\r\n                        <textarea id='content' className='materialize-textarea' onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className='input-field'>\r\n                        <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        createProject:  (project)=> dispatch(createProject(project)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject =(project)=>{\r\n    return (dispatch,getState,{getFirestore})=>{\r\n        //MAKE ASYNC CALL TO DATABASE\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorfirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'CREATE_PROJECT',project})\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport NavBar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div>\r\n      <NavBar/>\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard}/>\r\n        <Route path='/project/:id' component={ProjectDetails}/>\r\n        <Route path='/signin' component={SignIn}/>\r\n        <Route path='/signup' component={SignUp}/>\r\n        <Route path='/create' component={CreateProject}/>\r\n      </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login Error')\r\n        return {\r\n            ...state,\r\n            authError: 'Login Failed' \r\n        }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            return {\r\n                 authError:action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer","const initState ={\r\n    projects:[\r\n        {id:'1',title:'help me find peach',content:'blah blah blah'},\r\n        {id:'2',title:'collect all the stars',content:'blah blah blah'},\r\n        {id:'3',title:'egg hunt with yoshi',content:'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState,action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project',action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error',action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDcMzMIWXQVrolAmBLmN21NOdfT4dM1iG4\",\r\n    authDomain: \"net-ninja-marioplan-9ab24.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-9ab24.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-9ab24\",\r\n    storageBucket: \"net-ninja-marioplan-9ab24.appspot.com\",\r\n    messagingSenderId: \"81397135222\",\r\n    appId: \"1:81397135222:web:f53ff977b511a78ab3ac57\",\r\n    measurementId: \"G-6Z9HB64YQY\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots:true});\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\r\n    reduxFirestore(fbConfig) // redux bindings for firestore\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n  serviceWorker.unregister();\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}